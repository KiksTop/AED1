 #include <stdio.h>
    #include <stdlib.h>
    #include <time.h>

    #define TamVet 20000

void Intercala(int l, int q, int x, int v[]){
    int i, j, k, *w;
    w = malloc((l-x) * sizeof(int));
    i = l ; j = q ; k=0;
    while(i<q && j<x){
        if(v[i] <=v[j]) w[k++] = v[i++];
        else w[k++] = v[j++];
    }
    while(i<q) w[k++] = v[i++];
    while(j<x) w[k++] = v[j++];
    for(i=l; i<x; i++) v[i] = w[i-l];
    free(w);
}


void MergeSort(int l, int x, int v[]){
    if (l < x - 1) { // Condição de parada do algoritmo
        int q = (l + x) / 2;
        MergeSort(l, q, v);
        MergeSort(q, x, v);
        Intercala(l, q, x, v);
    }
}

    int main() {  
        int i;
        int l=0;
        int x = TamVet;
        int v[TamVet];

        srand(time(NULL)); // inicializa o gerador de números aleatórios com o tempo atual

        for (i = 0; i < TamVet; i++) {
            v[i] = rand() % 100; // gera um número aleatório entre 0 e 99
        }

        MergeSort(l , x, v[TamVet]);

        // imprime o vetor ordenado
        for (i = 0; i < TamVet; i++) {
            printf("%d ", v[i]);
        }
        printf("\n");

        return 0;
    }
