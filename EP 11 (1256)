#include <iostream>
#include <cstdlib>

struct Node {
    int key;
    Node* next;
};

int main() {
    int teste, endereco_base, chaves;
    std::cin >> teste;

    while (teste > 0) {
        std::cin >> endereco_base >> chaves;
        Node** hash = new Node*[endereco_base];

        for (int i = 0; i < endereco_base; i++) {
            hash[i] = nullptr;
        }

        for (int i = 0; i < chaves; i++) {
            int chaveamento;
            std::cin >> chaveamento;
            int aux = chaveamento % endereco_base;

            Node* newNode = new Node;
            newNode->key = chaveamento;
            newNode->next = nullptr;

            if (hash[aux] == nullptr) {
                hash[aux] = newNode;
            } else {
                Node* current = hash[aux];
                while (current->next != nullptr) {
                    current = current->next;
                }
                current->next = newNode;
            }
        }

        for (int i = 0; i < endereco_base; i++) {
            std::cout << i << " ->";

            if (hash[i] == nullptr) {
                std::cout << " \\";
            } else {
                Node* current = hash[i];
                while (current != nullptr) {
                    std::cout << " " << current->key << " ->";
                    current = current->next;
                }
                std::cout << " \\";
            }
            if(i + 1 != endereco_base) {
                std::cout << std::endl;
            }
        }

        for (int i = 0; i < endereco_base; i++) {
            Node* current = hash[i];
            while (current != nullptr) {
                Node* temp = current;
                current = current->next;
                delete temp;
            }
        }
        delete[] hash;
        if(teste - 1 != 0) {
            std::cout << std::endl << std::endl;
        } else {
            std::cout << std::endl;
        }
        teste--;
    }

    return 0;
}
